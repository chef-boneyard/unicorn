# Upstart Unicorn Conf

start on (filesystem and net-device-up IFACE=lo)
stop on runlevel [!2345]

# Send a USR2 to it to reload the application in a new unicorn process
reload signal USR2

respawn limit unlimited


script
  # Trap any USR2 (reload) signals sent to this script (a bash process in its
  # own right), and pass them on to Unicorn.
  trap 'kill -USR2 $(cat "<%= @pid %>")' USR2

  cd <%= @working_directory %>;

  # Kill any previous unicorn instances
  [ -e <%= @pid %> ] && kill -QUIT $(cat <%= @pid %>) || true;

  # Start unicorn
  bundle exec unicorn -c <%= @name %> -D -E <%= @rack_env %>;

  # Give unicorn 10 seconds to initialize and establish it's write lock.
  # This prevents initctl start from spinning up 2 unicorn masters and
  # also rate limits unicorn master restarts.
  sleep 10

  # Wait for the write lock held by the unicorn master. If a write lock is
  # acheived by this upstart script it means the unicorn master has exited.
  flock -x 0 < <%= @pid %>.lock

end script

post-stop script
  # KILL the unicorns on stop
  [ -e <%= @pid %> ] && kill -QUIT $(cat <%= @pid %>) || true;
end script

